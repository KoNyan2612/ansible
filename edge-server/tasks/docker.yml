- name: Add repository apt key
  become: true
  when: not docker_version
  ansible.builtin.apt_key:
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Add repository to the apt sources
  become: true
  when: not docker_version
  ansible.builtin.apt_repository:
    state: present
    repo: "deb [arch={{ deb_arch }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

- name: Install packages
  become: true
  when: not docker_version
  notify:
    - Restart docker daemon
  with_items:
    - containerd.io
    - docker-buildx-plugin
    - docker-ce
    - docker-ce-cli
    - docker-compose-plugin
  ansible.builtin.apt:
    name: "{{ item }}"
    cache_valid_time: "{{ cache_valid_time }}"

# - name: Install packages arm64
#   become: true
#   when: deb_arch == "arm64"
#   notify:
#    - Restart docker daemon
#   with_items:
#     - nvidia-jetpack
#     - docker-compose-plugin
#   ansible.builtin.apt:
#     name: "{{ item }}"
#     cache_valid_time: "{{ cache_valid_time }}"

- name: Create docker group
  become: true
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to the docker group
  become: true
  ansible.builtin.user:
    append: true
    groups: docker
    name: "{{ ansible_user_id }}"

- name: Configure docker daemon defaults
  become: true
  notify:
    - Restart docker daemon
  ansible.builtin.copy:
    src: "files/etc/docker/daemon.{{ deb_arch }}.json"
    dest: /etc/docker/daemon.json

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
